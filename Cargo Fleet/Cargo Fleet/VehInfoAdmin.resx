<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v//Z
</value>
  </data>
</root>